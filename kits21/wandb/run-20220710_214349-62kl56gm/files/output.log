INFO: Starting training:
        Epochs:          {epochs}
        Batch size:      {batch_size}
        Learning rate:   {learning_rate}
        Training size:   {n_train}
        Validation size: {n_val}
        Checkpoints:     {save_checkpoint}
        Device:          {device.type}
        Images scaling:  {img_scale}
        Mixed Precision: {amp}
Epoch 1/1000:   0%|          | 0/101 [00:00<?, ?img/s]C:\Users\OUR\anaconda3\envs\pytorch=3.10\lib\site-packages\torch\autocast_mode.py:162: UserWarning: User provided device_type of 'cuda', but CUDA is not available. Disabling
  warnings.warn('User provided device_type of \'cuda\', but CUDA is not available. Disabling')
llllll000000000000
tensor([0, 1, 2, 3])
Epoch 1/1000:   0%|          | 0/101 [00:03<?, ?img/s]
Traceback (most recent call last):
  File "D:\AI\kits21-master\kits21\train.py", line 197, in <module>
    train_net(net=net,
  File "D:\AI\kits21-master\kits21\train.py", line 103, in train_net
    loss = criterion(masks_pred, true_masks)
  File "C:\Users\OUR\anaconda3\envs\pytorch=3.10\lib\site-packages\torch\nn\modules\module.py", line 1110, in _call_impl
    return forward_call(*input, **kwargs)
  File "C:\Users\OUR\anaconda3\envs\pytorch=3.10\lib\site-packages\torch\nn\modules\loss.py", line 1163, in forward
    return F.cross_entropy(input, target, weight=self.weight,
  File "C:\Users\OUR\anaconda3\envs\pytorch=3.10\lib\site-packages\torch\nn\functional.py", line 2996, in cross_entropy
    return torch._C._nn.cross_entropy_loss(input, target, weight, _Reduction.get_enum(reduction), ignore_index, label_smoothing)
IndexError: Target 3 is out of bounds.